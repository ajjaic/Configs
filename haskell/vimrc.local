" This file is meant to be used along with haskell-vim-now plugin
" To use this configuration, install haskell-vim-now first

" remap jk to escape from insert mode
inoremap jk <Esc>

" edit vimrc file
nnoremap <leader>ev :e ~/.config/haskell-vim-now/vimrc.local<cr>
nnoremap <leader>ep :e ~/.config/haskell-vim-now/plugins.vim<cr>
nnoremap <leader>eo :e ~/.vimrc<cr>

" save file, save all files, save and quit
nnoremap <leader>w :w<cr>
nnoremap <leader>l :wa<cr>

" next and previous buffers
nnoremap <C-h> :bp<cr>
nnoremap <C-l> :bn<cr>

" check current file with ghc-mod
nmap <silent> <leader>hc :GhcModCheck<cr>

" Disable highlight when <leader><cr> is pressed
" but preserve cursor coloring
nmap <silent> <leader>, :noh\|hi Cursor guibg=red<cr>
augroup haskell
  autocmd!
  autocmd FileType haskell map <silent> <leader>, :noh<cr>:GhcModTypeClear<cr>:SyntasticReset<cr>
  autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
augroup END

" commentary
nmap cc :Commentary<cr>
vmap cc :Commentary<cr>

" easy-motion
let g:EasyMotion_do_mapping = 0
map f <Plug>(easymotion-s)

" indent and keep selection so that I can do it again
vnoremap < <gv
vnoremap > >gv

" stack related commands
nnoremap <leader>. :!stack ghci<cr>

" unite 
let g:unite_prompt = '>>'
let g:unite_source_history_yank_enable = 1
nnoremap <silent> <Leader>ut :Unite -start-insert -input=!.stack-work\ !.gitignore\  file_rec/async<CR>
nnoremap <silent> <Leader>uv :Unite -start-insert buffer<CR>
nnoremap <silent> <leader>ul :Unite -start-insert line<CR><CR>
nnoremap <silent> <leader>uc :Unite -start-insert history/command<CR>
nnoremap <silent> <leader>uy :Unite -start-insert history/yank<CR>
nnoremap <silent> <Leader>um :Unite -start-insert file_mru<CR>
nnoremap <silent> <leader>us :Unite -start-insert history/search<CR>
nnoremap <silent> <leader>up :Unite grep:./*<CR>
nnoremap <silent> <leader>ug :UniteWithCursorWord grep:./*<CR>
nnoremap <silent> <leader>ub :Unite grep:$buffers<CR>
nnoremap <silent> <leader>uw :UniteWithCursorWord grep:$buffers<CR>
nnoremap <silent> <leader>uf :UniteWithCursorWord file_rec/async<CR>
nnoremap <silent> <leader>ud :UniteWithBufferDir -start-insert file<CR>
